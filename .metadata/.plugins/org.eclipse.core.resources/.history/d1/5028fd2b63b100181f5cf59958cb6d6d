package com.walmart.ticket.service;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.List;
import java.util.Map;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.walmart.ticket.TicketReservationMain;
import com.walmart.ticket.model.STATUS;
import com.walmart.ticket.model.SeatHold;
import com.walmart.ticket.service.Impl.TicketServiceImpl;



public class TicketReservationMainTest {
	
	private TicketServiceImpl service;
	
	
	

	@Before
	public void setUp() throws Exception {
		Map<STATUS,List<SeatHold>> seatsMap = TicketReservationMain.initializeSeats();
		
		service = new TicketServiceImpl(seatsMap, TicketReservationMain.nbrOfRows,TicketReservationMain.nbrOfSeatsPerRow);
	}

	@After
	public void tearDown() throws Exception {
	}
	
	
	//number of rows and seats can be adjusted in properties file
	@Test
	//input NbrOfRows = 3
	//NbrOfSeatsPerRow = 5
	public void numSeatsAvailable() {
		
		int numberOfSeats = service.numSeatsAvailable();
		assert(numberOfSeats == 15);
	}
	
	
	
	@Test
	public void findAndHoldSeats() throws InterruptedException{
		SeatHold s1 = service.findAndHoldSeats(1, "xyz@abc.com");
		assertNotNull(s1);
		assert(1 == s1.getSeatsHeld().size());
		s1 = service.findAndHoldSeats(1, "xyz@abc.com");
		assert(null == s1);
		Thread.sleep(wait);
		s1 = service.findAndHoldSeats(1, "xyz@abc.com");
		assertNotNull(s1);
		assert(1 == s1.getSeatsHeld().size());
		Thread.sleep(wait);
		s1 = service.findAndHoldSeats(2, "xyz@abc.com");
		assert(null == s1);
	}
	
	@Test
	public void reserveSeats() throws InterruptedException{
		SeatHold s1 = service.findAndHoldSeats(1, "xyz@abc.com");
		String conf = service.reserveSeats(s1.getId(), "xyz@abc.com");
		assertNotNull(conf);
		assertTrue(conf.contains("reserved!"));
		conf = service.reserveSeats(0, "xyz@abc.com");
		assert(null == conf);
	}
	
	
	
	
}
